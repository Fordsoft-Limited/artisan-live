{"version":3,"file":"static/js/948.0d61cbdb.chunk.js","mappings":"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","sources":["components/dashboard/Blog.js","components/dashboard/ProjectTable.js","components/dashboard/SalesChart.js","components/dashboard/Feeds.js","components/dashboard/TopCards.js","views/Starter.js"],"sourcesContent":["import {\n  Card,\n  CardBody,\n  CardImg,\n  CardSubtitle,\n  CardText,\n  CardTitle,\n  Button,\n} from \"reactstrap\";\n\nconst Blog = (props) => {\n  return (\n    <Card>\n      <CardImg alt=\"Card image cap\" src={props.image} />\n      <CardBody className=\"p-4\">\n        <CardTitle tag=\"h5\">{props.title}</CardTitle>\n        <CardSubtitle>{props.subtitle}</CardSubtitle>\n        <CardText className=\"mt-3\">{props.text}</CardText>\n        <Button color={props.color}>Read More</Button>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Blog;\n","import { Card, CardBody, CardTitle, CardSubtitle, Table } from \"reactstrap\";\nimport user1 from \"../../assets/images/users/user1.jpg\";\nimport user2 from \"../../assets/images/users/user2.jpg\";\nimport user3 from \"../../assets/images/users/user3.jpg\";\nimport user4 from \"../../assets/images/users/user4.jpg\";\nimport user5 from \"../../assets/images/users/user5.jpg\";\n\nconst tableData = [\n  {\n    avatar: user1,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Flexy React\",\n    status: \"pending\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n  {\n    avatar: user2,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Lading pro React\",\n    status: \"done\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n  {\n    avatar: user3,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Elite React\",\n    status: \"holt\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n  {\n    avatar: user4,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Flexy React\",\n    status: \"pending\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n  {\n    avatar: user5,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Ample React\",\n    status: \"done\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n];\n\nconst ProjectTables = () => {\n  return (\n    <div>\n      <Card>\n        <CardBody>\n          <CardTitle tag=\"h5\">Project Listing</CardTitle>\n          <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\n            Overview of the projects\n          </CardSubtitle>\n\n          <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\n            <thead>\n              <tr>\n                <th>Team Lead</th>\n                <th>Project</th>\n\n                <th>Status</th>\n                <th>Weeks</th>\n                <th>Budget</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tableData.map((tdata, index) => (\n                <tr key={index} className=\"border-top\">\n                  <td>\n                    <div className=\"d-flex align-items-center p-2\">\n                      <img\n                        src={tdata.avatar}\n                        className=\"rounded-circle\"\n                        alt=\"avatar\"\n                        width=\"45\"\n                        height=\"45\"\n                      />\n                      <div className=\"ms-3\">\n                        <h6 className=\"mb-0\">{tdata.name}</h6>\n                        <span className=\"text-muted\">{tdata.email}</span>\n                      </div>\n                    </div>\n                  </td>\n                  <td>{tdata.project}</td>\n                  <td>\n                    {tdata.status === \"pending\" ? (\n                      <span className=\"p-2 bg-danger rounded-circle d-inline-block ms-3\"></span>\n                    ) : tdata.status === \"holt\" ? (\n                      <span className=\"p-2 bg-warning rounded-circle d-inline-block ms-3\"></span>\n                    ) : (\n                      <span className=\"p-2 bg-success rounded-circle d-inline-block ms-3\"></span>\n                    )}\n                  </td>\n                  <td>{tdata.weeks}</td>\n                  <td>{tdata.budget}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default ProjectTables;\n","import { Card, CardBody, CardSubtitle, CardTitle } from \"reactstrap\";\nimport Chart from \"react-apexcharts\";\n\nconst SalesChart = () => {\n  const chartoptions = {\n    series: [\n      {\n        name: \"Iphone 13\",\n        data: [0, 31, 40, 28, 51, 42, 109, 100],\n      },\n      {\n        name: \"Oneplue 9\",\n        data: [0, 11, 32, 45, 32, 34, 52, 41],\n      },\n    ],\n    options: {\n      chart: {\n        type: \"area\",\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      grid: {\n        strokeDashArray: 3,\n      },\n\n      stroke: {\n        curve: \"smooth\",\n        width: 1,\n      },\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"Aug\",\n        ],\n      },\n    },\n  };\n  return (\n    <Card>\n      <CardBody>\n        <CardTitle tag=\"h5\">Sales Summary</CardTitle>\n        <CardSubtitle className=\"text-muted\" tag=\"h6\">\n          Yearly Sales Report\n        </CardSubtitle>\n        <Chart\n          type=\"area\"\n          width=\"100%\"\n          height=\"390\"\n          options={chartoptions.options}\n          series={chartoptions.series}\n        ></Chart>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default SalesChart;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  ListGroup,\n  CardSubtitle,\n  ListGroupItem,\n  Button,\n} from \"reactstrap\";\n\nconst FeedData = [\n  {\n    title: \"Cras justo odio\",\n    icon: \"bi bi-bell\",\n    color: \"primary\",\n    date: \"6 minute ago\",\n  },\n  {\n    title: \"New user registered.\",\n    icon: \"bi bi-person\",\n    color: \"info\",\n    date: \"6 minute ago\",\n  },\n  {\n    title: \"Server #1 overloaded.\",\n    icon: \"bi bi-hdd\",\n    color: \"danger\",\n    date: \"6 minute ago\",\n  },\n  {\n    title: \"New order received.\",\n    icon: \"bi bi-bag-check\",\n    color: \"success\",\n    date: \"6 minute ago\",\n  },\n  {\n    title: \"Cras justo odio\",\n    icon: \"bi bi-bell\",\n    color: \"dark\",\n    date: \"6 minute ago\",\n  },\n  {\n    title: \"Server #1 overloaded.\",\n    icon: \"bi bi-hdd\",\n    color: \"warning\",\n    date: \"6 minute ago\",\n  },\n];\n\nconst Feeds = () => {\n  return (\n    <Card>\n      <CardBody>\n        <CardTitle tag=\"h5\">Feeds</CardTitle>\n        <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\n          Widget you can use\n        </CardSubtitle>\n        <ListGroup flush className=\"mt-4\">\n          {FeedData.map((feed, index) => (\n            <ListGroupItem\n              key={index}\n              action\n              href=\"/\"\n              tag=\"a\"\n              className=\"d-flex align-items-center p-3 border-0\"\n            >\n              <Button\n                className=\"rounded-circle me-3\"\n                size=\"sm\"\n                color={feed.color}\n              >\n                <i className={feed.icon}></i>\n              </Button>\n              {feed.title}\n              <small className=\"ms-auto text-muted text-small\">\n                {feed.date}\n              </small>\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Feeds;\n","import { Card, CardBody } from \"reactstrap\";\n\nconst TopCards = (props) => {\n  return (\n    <Card>\n      <CardBody>\n        <div className=\"d-flex\">\n          <div className={`circle-box lg-box d-inline-block ${props.bg}`}>\n            <i className={props.icon}></i>\n          </div>\n          <div className=\"ms-3\">\n            <h3 className=\"mb-0 font-weight-bold\">{props.earning}</h3>\n            <small className=\"text-muted\">{props.subtitle}</small>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default TopCards;\n","import { Col, Row } from \"reactstrap\";\nimport SalesChart from \"../components/dashboard/SalesChart\";\nimport Feeds from \"../components/dashboard/Feeds\";\nimport ProjectTables from \"../components/dashboard/ProjectTable\";\nimport TopCards from \"../components/dashboard/TopCards\";\nimport Blog from \"../components/dashboard/Blog\";\nimport bg1 from \"../assets/images/bg/bg1.jpg\";\nimport bg2 from \"../assets/images/bg/bg2.jpg\";\nimport bg3 from \"../assets/images/bg/bg3.jpg\";\nimport bg4 from \"../assets/images/bg/bg4.jpg\";\n\nconst BlogData = [\n  {\n    image: bg1,\n    title: \"This is simple blog\",\n    subtitle: \"2 comments, 1 Like\",\n    description:\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n    btnbg: \"primary\",\n  },\n  {\n    image: bg2,\n    title: \"Lets be simple blog\",\n    subtitle: \"2 comments, 1 Like\",\n    description:\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n    btnbg: \"primary\",\n  },\n  {\n    image: bg3,\n    title: \"Don't Lamp blog\",\n    subtitle: \"2 comments, 1 Like\",\n    description:\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n    btnbg: \"primary\",\n  },\n  {\n    image: bg4,\n    title: \"Simple is beautiful\",\n    subtitle: \"2 comments, 1 Like\",\n    description:\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n    btnbg: \"primary\",\n  },\n];\n\nconst Starter = () => {\n  return (\n    <div>\n      {/***Top Cards***/}\n      <Row>\n        <Col sm=\"6\" lg=\"3\">\n          <TopCards\n            bg=\"bg-light-success text-success\"\n            title=\"Profit\"\n            subtitle=\"Yearly Earning\"\n            earning=\"$21k\"\n            icon=\"bi bi-wallet\"\n          />\n        </Col>\n        <Col sm=\"6\" lg=\"3\">\n          <TopCards\n            bg=\"bg-light-danger text-danger\"\n            title=\"Refunds\"\n            subtitle=\"Refund given\"\n            earning=\"$1k\"\n            icon=\"bi bi-coin\"\n          />\n        </Col>\n        <Col sm=\"6\" lg=\"3\">\n          <TopCards\n            bg=\"bg-light-warning text-warning\"\n            title=\"New Project\"\n            subtitle=\"Yearly Project\"\n            earning=\"456\"\n            icon=\"bi bi-basket3\"\n          />\n        </Col>\n        <Col sm=\"6\" lg=\"3\">\n          <TopCards\n            bg=\"bg-light-info text-into\"\n            title=\"Sales\"\n            subtitle=\"Weekly Sales\"\n            earning=\"210\"\n            icon=\"bi bi-bag\"\n          />\n        </Col>\n      </Row>\n      {/***Sales & Feed***/}\n      <Row>\n        <Col sm=\"6\" lg=\"6\" xl=\"7\" xxl=\"8\">\n          <SalesChart />\n        </Col>\n        <Col sm=\"6\" lg=\"6\" xl=\"5\" xxl=\"4\">\n          <Feeds />\n        </Col>\n      </Row>\n      {/***Table ***/}\n      <Row>\n        <Col lg=\"12\">\n          <ProjectTables />\n        </Col>\n      </Row>\n      {/***Blog Cards***/}\n      <Row>\n        {BlogData.map((blg, index) => (\n          <Col sm=\"6\" lg=\"6\" xl=\"3\" key={index}>\n            <Blog\n              image={blg.image}\n              title={blg.title}\n              subtitle={blg.subtitle}\n              text={blg.description}\n              color={blg.btnbg}\n            />\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default Starter;\n"],"names":["props","_jsxs","Card","children","_jsx","CardImg","alt","src","image","CardBody","className","CardTitle","tag","title","CardSubtitle","subtitle","CardText","text","Button","color","tableData","avatar","user1","name","email","project","status","weeks","budget","user2","user3","user4","user5","ProjectTables","Table","responsive","borderless","map","tdata","index","width","height","SalesChart","chartoptions","series","data","options","chart","type","dataLabels","enabled","grid","strokeDashArray","stroke","curve","xaxis","categories","Chart","FeedData","icon","date","Feeds","ListGroup","flush","feed","ListGroupItem","action","href","size","concat","bg","earning","BlogData","description","btnbg","Starter","Row","Col","sm","lg","TopCards","xl","xxl","blg","Blog"],"sourceRoot":""}